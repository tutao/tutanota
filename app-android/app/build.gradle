apply plugin: 'com.android.application'

android {
	compileSdkVersion 29
	buildToolsVersion '29.0.2'
	defaultConfig {
		applicationId "de.tutao.tutanota"
		minSdkVersion 21
		targetSdkVersion 29
		versionCode 377040
		versionName "3.77.4"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
			}
		}
	}
	buildTypes {
		debug {
			manifestPlaceholders = [contentProviderAuthority: 'de.tutao.fileprovider.debug']
			buildConfigField 'String', 'RES_ADDRESS', "\"file:///android_asset/tutanota/app.html\""
			applicationIdSuffix ".debug"
		}
		debugDist {
			initWith debug
			manifestPlaceholders = [contentProviderAuthority: 'de.tutao.fileprovider.debugdist']
			buildConfigField 'String', 'RES_ADDRESS', "\"file:///android_asset/tutanota/dist/app.html\""
			applicationIdSuffix ".debugdist"
		}
		releaseTest {
			initWith release
			manifestPlaceholders = [contentProviderAuthority: 'de.tutao.fileprovider.test']
			buildConfigField 'String', 'RES_ADDRESS', "\"file:///android_asset/tutanota/dist/app.html\""
			applicationIdSuffix ".test"
		}
		release {
			minifyEnabled true
			manifestPlaceholders = [contentProviderAuthority: 'de.tutao.fileprovider']
			buildConfigField 'String', 'RES_ADDRESS', "\"file:///android_asset/tutanota/dist/app.html\""
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	applicationVariants.all { variant ->
		variant.outputs.all { output ->
			outputFileName = output.outputFileName.replace("app-release.apk", "tutanota-${variant.versionName}.apk")
		}
	}

	buildTypes.each {
		it.buildConfigField 'String', 'FILE_PROVIDER_AUTHORITY', '"' + it.manifestPlaceholders['contentProviderAuthority'] + '"'
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/ASL2.0'
	}
}

task copyResourcesToClasses(type: Copy) {
	from "${projectDir}/src/main/assets/tutanota/test/AlarmCompatibilityTest.json"
	into "${buildDir}/intermediates/classes/test/debug/resources"
}

preBuild.dependsOn copyResourcesToClasses

//task unitTest(dependsOn: [copyResourcesToClasses, 'testDebugUnitTest']) {
//
//}

tasks.withType(Test) {
	testLogging {
		exceptionFormat "full"
		events "started", "skipped", "passed", "failed"
		showStandardStreams true
	}
}

dependencies {
	def room_version = "2.2.3"
	def lifecycle_version = "2.2.0"
	def appcompat_version = "1.1.0"

	implementation fileTree(dir: 'libs', include: ['*.jar'])
	androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	implementation 'commons-io:commons-io:2.5'
	implementation 'org.jdeferred:jdeferred-core:1.2.4'
	implementation 'androidx.core:core:1.1.0'

	implementation "androidx.room:room-runtime:$room_version"
	annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

	implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"





	testImplementation 'junit:junit:4.12'
	testImplementation "org.robolectric:robolectric:3.3.2"
	testImplementation "org.mockito:mockito-core:2.28.2"
	androidTestImplementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
}
