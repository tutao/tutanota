{
	"env": {
		"browser": true,
		"es2021": true,
		// This could be enabled on a per directory basis in theory,
		// But we need node for `src/desktop`, `buildSrc`, as well as our build scripts at the top level
		// so it would be a bit much
		"node": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		// It is important that prettier is the last in the list,
		// Or the output of `npm run fix` will fail `npm run check`
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 2021,
		"sourceType": "module"
	},
	"plugins": ["@typescript-eslint"],
	"rules": {
		// These rules have hits when running eslint (in ascending order of frequency) *after* running prettier and eslint --fix
		// We should work to re-enable these rules, or at least most of them (some are very prevalent)
		"no-control-regex": 0,
		"@typescript-eslint/no-non-null-asserted-optional-chain": 0,
		"@typescript-eslint/no-this-alias": 0,
		"no-async-promise-executor": 0,
		"@typescript-eslint/no-var-requires": 0,
		"no-empty-pattern": 0,
		"no-inner-declarations": 0,
		"no-irregular-whitespace": 0,
		"no-constant-condition": 0,
		"prefer-rest-params": 0,
		"prefer-spread": 0,
		"no-prototype-builtins": 0,
		"no-var": 0,
		"no-undef": 0,
		"no-fallthrough": 0,
		"no-empty": 0,
		"@typescript-eslint/ban-types": 0,
		"no-useless-escape": 0,
		"no-case-declarations": 0,
		"prefer-const": 0,
		"@typescript-eslint/no-empty-function": 0,
		"@typescript-eslint/no-non-null-assertion": 0,
		"@typescript-eslint/ban-ts-comment": 0,
		"@typescript-eslint/no-explicit-any": 0,
		"@typescript-eslint/no-unused-vars": 0,
		"@typescript-eslint/no-inferrable-types": 0
	}
}
